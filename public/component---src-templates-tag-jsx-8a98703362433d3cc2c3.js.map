{"version":3,"sources":["webpack:///./src/templates/tag.jsx","webpack:///./src/components/Posts/Posts.jsx"],"names":["Tag","render","this","props","data","tag","pathContext","pathname","location","title","description","url","style","fontSize","padding","Component","pageQuery","posts","allMarkdownRemark","edges","map","node","key","fields","slug","className","to","frontmatter","date"],"mappings":"4QAMqBA,E,gLACjBC,OAAA,WAAU,IAAD,EACyBC,KAAKC,MAA3BC,EADH,EACGA,KACAC,EAFH,EACSC,YACND,IACAE,EAAaL,KAAKC,MAAMK,SAAxBD,SACR,OACI,kBAAC,IAAD,KACI,6BACI,kBAAC,IAAD,CAAKE,MAAK,QAAUJ,EAAOK,YAAW,iCAAmCL,EAAnC,IAA2CM,IAAKJ,IACtF,wBAAIK,MAAO,CAAEC,SAAU,OAAQC,QAAS,aAAxC,8BACgCT,GAEhC,kBAAC,IAAD,CAAOD,KAAMA,O,GAZAW,aAmBpBC,EAAS,Y,yGCrBP,G,UAAA,YAAe,IAEpBC,EAFmB,EAAXb,KACSc,kBAAfC,MAEEC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACN,yBAAKC,IAAKD,EAAKE,OAAOC,KAAMC,UAAU,QAClC,kBAAC,OAAD,CAAMC,GAAIL,EAAKE,OAAOC,KAAMC,UAAU,cAClC,4BAAKJ,EAAKM,YAAYlB,QAE1B,uBAAGgB,UAAU,aAAaJ,EAAKM,YAAYC,MAC3C,2BAAIP,EAAKM,YAAYjB,iBAKjC,OACI,yBAAKe,UAAU,SACVR","file":"component---src-templates-tag-jsx-8a98703362433d3cc2c3.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../components/Layout\";\r\nimport Posts from \"../components/Posts\";\r\nimport SEO from \"../components/SEO/SEO\";\r\n\r\nexport default class Tag extends Component {\r\n    render() {\r\n        const { data, pathContext } = this.props;\r\n        const { tag } = pathContext;\r\n        const { pathname } = this.props.location;\r\n        return (\r\n            <Layout>\r\n                <div>\r\n                    <SEO title={`tag: ${tag}`} description={`all random posts tagged with \"${tag}\"`} url={pathname} />\r\n                    <h2 style={{ fontSize: \"22px\", padding: \"0px 15px\" }}>\r\n                        All random posts with tag: {tag}\r\n                    </h2>\r\n                    <Posts data={data} />\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n    query TagPage($tag: String) {\r\n        allMarkdownRemark(\r\n            limit: 1000\r\n            sort: { fields: [fields___prefix], order: DESC }\r\n            filter: { frontmatter: { tags: { in: [$tag] }, draft: { ne: true } } }\r\n        ) {\r\n            edges {\r\n                node {\r\n                    fields {\r\n                        slug\r\n                    }\r\n                    frontmatter {\r\n                        title\r\n                        date(formatString: \"DD/MM/YY\")\r\n                        description\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./Posts.css\";\r\n\r\nexport default ({ data }) => {\r\n    const { edges } = data.allMarkdownRemark;\r\n    const posts = (\r\n        edges.map(({ node }) =>\r\n            <div key={node.fields.slug} className=\"post\">\r\n                <Link to={node.fields.slug} className=\"post-title\">\r\n                    <h2>{node.frontmatter.title}</h2>\r\n                </Link>\r\n                <p className=\"post-date\">{node.frontmatter.date}</p>\r\n                <p>{node.frontmatter.description}</p>\r\n            </div>\r\n        )\r\n    );\r\n    \r\n    return (\r\n        <div className=\"posts\">\r\n            {posts}\r\n        </div>\r\n    );\r\n}"],"sourceRoot":""}